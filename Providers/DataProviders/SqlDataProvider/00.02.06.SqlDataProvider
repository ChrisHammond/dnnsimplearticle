IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DNNSimpleArticle_TemplateType]') AND type in (N'U'))
DROP TABLE {databaseOwner}[{objectQualifier}DNNSimpleArticle_TemplateType]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}DNNSimpleArticle_TemplateType]
	(
	id int NOT NULL IDENTITY (1, 1),
	TemplateTypeName nvarchar(50) NOT NULL
	)  ON [PRIMARY]
GO
ALTER TABLE {databaseOwner}[{objectQualifier}DNNSimpleArticle_TemplateType] SET (LOCK_ESCALATION = TABLE)
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DNNSimpleArticle_Template]') AND type in (N'U'))
DROP TABLE {databaseOwner}[{objectQualifier}DNNSimpleArticle_Template]
GO

CREATE TABLE {databaseOwner}[{objectQualifier}DNNSimpleArticle_Template]
	(
	Id int NOT NULL IDENTITY (1, 1),
	TemplateName nvarchar(50) NOT NULL,
	TemplateContent nvarchar(MAX) NOT NULL,
	TemplateTypeId int NOT NULL,
	CreatedOnDate datetime NOT NULL,
	CreatedByUserId int NULL,
	LastModifiedOnDate date NOT NULL,
	LastModifiedByUserId int NULL
	)  ON [PRIMARY]
	 TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE {databaseOwner}[{objectQualifier}DNNSimpleArticle_Template] SET (LOCK_ESCALATION = TABLE)
GO


INSERT INTO {databaseOwner}[{objectQualifier}DNNSimpleArticle_TemplateType]
(
    TemplateTypeName
)
VALUES
(N'Article View' -- TemplateTypeName - nvarchar(50)
    );
	GO

INSERT INTO {databaseOwner}[{objectQualifier}DNNSimpleArticle_TemplateType]
(
    TemplateTypeName
)
VALUES
(N'Article List' -- TemplateTypeName - nvarchar(50)
    );


	GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticles]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}DNNSimpleArticle_spGetArticles
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticles]
   @ModuleId INT,
   @PageSize INT,
   @PageIndex INT
AS 
   BEGIN
       DECLARE @RowStart INT 
       DECLARE @RowEnd INT 
               
       SET @RowStart = @PageSize * @PageIndex + 1 ; 
       SET @RowEnd = @RowStart + @PageSize - 1 ; 
       
       SELECT  *
       FROM    ( SELECT    
			a.Id,
			a.ModuleId,
			a.Title,
			a.Description,
			a.Body,
			a.CreatedOnDate,
			a.CreatedByUserId,
			a.LastModifiedOnDate,
			a.LastModifiedByUserId,
			( SELECT    TotalRecords = COUNT(*)
                        	FROM
					{databaseOwner}{objectQualifier}DNNSimpleArticle_Article a
					INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON a.ContentItemId = CI.ContentItemID
				WHERE 
					a.ModuleId = @ModuleId
                        ) AS TotalRecords,
			CI.ContentItemID,
			CI.Content,
			CI.ContentTypeID,
			CI.TabiD,
			CI.ContentKey,
			CI.Indexed,	
			CIMt.MetaDataValue as 'ThumbImg',
			CIMl.MetaDataValue as 'LargeImg',
			ROW_NUMBER() OVER ( ORDER BY a.CreatedOnDate DESC) AS RowNumber
		FROM
			{databaseOwner}{objectQualifier}DNNSimpleArticle_Article a
			INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON a.ContentItemId = CI.ContentItemID
			LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CIMt on a.ContentItemId = CIMt.ContentItemID and CIMt.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticleThumbImg')
			LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CIMl on a.ContentItemId = CIMl.ContentItemID and CIMl.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticleLargeImg')

		WHERE 
			a.ModuleId = @ModuleId

               ) AS ArticleInfo
       WHERE   RowNumber >= @RowStart
               AND RowNumber <= @RowEnd 
   END
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetTemplate]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}DNNSimpleArticle_spGetTemplate
GO


CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNSimpleArticle_spGetTemplate
	@TemplateId int
AS
SELECT 
	t.Id,
	t.TemplateName,
	T.TemplateContent,
	T.TemplateTypeId,
	T.CreatedOnDate,
	T.CreatedByUserId,
	T.LastModifiedOnDate,
	t.LastModifiedByUserId

FROM
	{databaseOwner}{objectQualifier}DNNSimpleArticle_Template t
	
WHERE 
	ID = @TemplateId
GO



INSERT INTO {databaseOwner}{objectQualifier}DNNSimpleArticle_Template
(
    TemplateName,
    TemplateContent,
    TemplateTypeId,
    CreatedOnDate,
    CreatedByUserId,
    LastModifiedOnDate,
    LastModifiedByUserId
)

VALUES
(   N'Bootstrapped Image List',       -- TemplateName - nvarchar(50)
    N'<article id="article-[ID]" class="article-[ID] article has-article-thumbnail col-md-4">
    <div class="article-with-img"  style="background-image: url([IMGURL]);">
        <div class="article-img">
            <img src="[IMGURL]" alt="[TITLE]" />
        </div>
		<a href="[URL]" class="article-inner-a">
			<div class="article-inner">
				<div class="article-content-inner">
					<header class="article-header-title">
						<h3 class="article-title">[TITLE]</h3>			                
						<div class="article-meta">
							[DESCRIPTION]
						</div>
					</header>
				</div>			
			</div>
		</a>
    </div>
</article>',       -- TemplateContent - nvarchar(max)
    1,         -- TemplateTypeId - int
    GETDATE(), -- CreatedDate - datetime
    1,         -- CreatedBy - int
    GETDATE(), -- LastUpdatedDate - date
    1          -- LastUpdatedBy - int
    )