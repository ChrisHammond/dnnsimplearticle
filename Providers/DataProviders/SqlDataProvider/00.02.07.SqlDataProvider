IF NOT EXISTS (SELECT * FROM {databaseOwner}[{objectQualifier}MetaData] WHERE MetaDataName = 'SimpleArticlePermaLink')
	insert into {databaseOwner}[{objectQualifier}MetaData]
	(MetaDataName,MetaDataDescription)
	values('SimpleArticlePermaLink','DNNSimpleArticle Module PermaLink')
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticle]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}DNNSimpleArticle_spGetArticle
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DNNSimpleArticle_spGetArticle
	@ArticleId int
AS
SELECT 
	a.[Id],
	a.ModuleId,
	a.Title,
	a.Description,
	a.Body,
	a.CreatedOnDate,
	a.CreatedByUserId,
	a.LastModifiedOnDate,
	a.LastModifiedByUserId,
	( SELECT    TotalRecords = COUNT(*)
                	FROM
			{databaseOwner}{objectQualifier}DNNSimpleArticle_Article a
			INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON a.ContentItemId = CI.ContentItemID
		WHERE 
			a.id = @ArticleId
                ) AS TotalRecords,

	CI.ContentItemID,
	CI.Content,
	CI.ContentTypeID,
	CI.TabiD,
	CI.ContentKey,
	CI.Indexed,
	CIMt.MetaDataValue as 'ThumbImg',
	CIMl.MetaDataValue as 'LargeImg',
	CPL.MetaDataValue as 'PermaLink'

FROM
	{databaseOwner}{objectQualifier}DNNSimpleArticle_Article a
	INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON a.ContentItemId = CI.ContentItemID
	LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CIMt on a.ContentItemId = CIMt.ContentItemID and CIMt.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticleThumbImg')
	LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CIMl on a.ContentItemId = CIMl.ContentItemID and CIMl.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticleLargeImg')
	LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CPL on a.ContentItemId = CPL.ContentItemID and CPL.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticlePermaLink')


WHERE 
	ID = @ArticleId
GO



IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}dnnsimplearticle_CleanString') AND type IN ( N'FN', N'IF', N'TF', N'FS', N'FT' ))
	DROP FUNCTION {databaseOwner}{objectQualifier}dnnsimplearticle_CleanString
GO



 CREATE FUNCTION {databaseOwner}{objectQualifier}dnnsimplearticle_CleanString
 
/*******************************************************************************

 Purpose:
 Given a string and a pattern of characters to remove, remove the patterned
 characters from the string.
 Usage:
--===== Basic Syntax Example
 SELECT CleanedString = dbo.CleanString(@pSomeString,@pPattern)
;

--===== Remove all but Alpha characters
 SELECT CleanedString = dbo.CleanString(st.SomeString,'%[^A-Za-z]%');
   FROM dbo.SomeTable st
;
--===== Remove all but Numeric digits
 SELECT CleanedString = dbo.CleanString(st.SomeString,'%[^0-9]%');
  FROM dbo.SomeTable st

 Programmer Notes:
 1. @pPattern is case sensitive.
 2. The pattern set of characters must be for just one character.
 Revision History:
 Rev 00 - Circa 2007 - Author Unknown
        - Initial find on the web
 Rev 01 - 29 Mar 2007 - Jeff Moden
        - Optimize to remove one instance of PATINDEX from the loop.
        - Add code to use the pattern as a parameter.
 Rev 02 - 26 May 2013 - Jeff Moden
        - Add case sensitivity
*******************************************************************************/
        (@pString VARCHAR(8000),@pPattern VARCHAR(100))

RETURNS VARCHAR(8000) AS

  BEGIN

        DECLARE @Pos SMALLINT;
         SELECT @Pos = PATINDEX(@pPattern,@pString COLLATE Latin1_General_BIN);
          WHILE @Pos > 0
         SELECT @pString = STUFF(@pString,@Pos,1,''),
                @Pos = PATINDEX(@pPattern,@pString COLLATE Latin1_General_BIN);
 RETURN @pString;
 END


GO



IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticles]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}DNNSimpleArticle_spGetArticles
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticles]
   @ModuleId INT,
   @PageSize INT,
   @PageIndex INT
AS 
   BEGIN
       DECLARE @RowStart INT 
       DECLARE @RowEnd INT 
               
       SET @RowStart = @PageSize * @PageIndex + 1 ; 
       SET @RowEnd = @RowStart + @PageSize - 1 ; 
       
       SELECT  *
       FROM    ( SELECT    
			a.Id,
			a.ModuleId,
			a.Title,
			a.Description,
			a.Body,
			a.CreatedOnDate,
			a.CreatedByUserId,
			a.LastModifiedOnDate,
			a.LastModifiedByUserId,
			( SELECT    TotalRecords = COUNT(*)
                        	FROM
					{databaseOwner}{objectQualifier}DNNSimpleArticle_Article a
					INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON a.ContentItemId = CI.ContentItemID
				WHERE 
					a.ModuleId = @ModuleId
                        ) AS TotalRecords,
			CI.ContentItemID,
			CI.Content,
			CI.ContentTypeID,
			CI.TabiD,
			CI.ContentKey,
			CI.Indexed,	
			CIMt.MetaDataValue as 'ThumbImg',
			CIMl.MetaDataValue as 'LargeImg',
			CPL.MetaDataValue as 'PermaLink',
			ROW_NUMBER() OVER ( ORDER BY a.CreatedOnDate DESC) AS RowNumber
		FROM
			{databaseOwner}{objectQualifier}DNNSimpleArticle_Article a
			INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON a.ContentItemId = CI.ContentItemID
			LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CIMt on a.ContentItemId = CIMt.ContentItemID and CIMt.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticleThumbImg')
			LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CIMl on a.ContentItemId = CIMl.ContentItemID and CIMl.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticleLargeImg')
			LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CPL on a.ContentItemId = CPL.ContentItemID and CPL.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticlePermaLink')

		WHERE 
			a.ModuleId = @ModuleId

               ) AS ArticleInfo
       WHERE   RowNumber >= @RowStart
               AND RowNumber <= @RowEnd 
   END
GO





IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticleUrls]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}DNNSimpleArticle_spGetArticleUrls
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticleUrls]
   @PortalId INT 
AS 
   BEGIN
		SELECT    
			a.Id,
			CASE WHEN CPL.MetaDataValue IS NULL THEN dbo.dnnsimplearticle_CleanString(a.Title, '%[^A-Za-z]%') ELSE CPL.MetaDataValue END 			as 'PermaLink'
		FROM
			{databaseOwner}{objectQualifier}DNNSimpleArticle_Article a
			INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON a.ContentItemId = CI.ContentItemID
			LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CPL on a.ContentItemId = CPL.ContentItemID and CPL.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticlePermaLink')
		where
			a.ModuleId 
				in (Select moduleid from {databaseOwner}{objectQualifier}modules 
					where moduledefid in (select moduledefid from {databaseOwner}{objectQualifier}moduledefinitions 
						where definitionname = 'dnnSimpleArticle' and portalid = @PortalId))
   END
GO


IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticleUrl]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}DNNSimpleArticle_spGetArticleUrl
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DNNSimpleArticle_spGetArticleUrl]
   @PortalId INT,
   @ArticleId INT
AS 
   BEGIN
		SELECT    
			a.Id,		
			CASE WHEN CPL.MetaDataValue IS NULL THEN dbo.dnnsimplearticle_CleanString(a.Title, '%[^A-Za-z]%') ELSE CPL.MetaDataValue END 			as 'PermaLink'
		FROM
			{databaseOwner}{objectQualifier}DNNSimpleArticle_Article a
			INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON a.ContentItemId = CI.ContentItemID
			LEFT JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData as CPL on a.ContentItemId = CPL.ContentItemID and CPL.MetaDataID = (select metadataid from {databaseOwner}{objectQualifier}MetaData where MetaDataName = 'SimpleArticlePermaLink')
		where
			a.ModuleId 
				in (Select moduleid from {databaseOwner}{objectQualifier}modules 
					where moduledefid in (select moduledefid from {databaseOwner}{objectQualifier}moduledefinitions 
						where definitionname = 'dnnSimpleArticle' and portalid = @PortalId))
						and a.id=@ArticleId
   END
GO